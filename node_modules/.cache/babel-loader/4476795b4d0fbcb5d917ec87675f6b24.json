{"ast":null,"code":"const {\n  PACKET_TYPES\n} = require(\"./commons\");\n\nconst withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\"; // ArrayBuffer.isView method is not defined in IE10\n\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({\n  type,\n  data\n}, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))) {\n    if (supportsBinary) {\n      return callback(data instanceof ArrayBuffer ? data : data.buffer);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  } // plain string\n\n\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n\n  fileReader.onload = function () {\n    const content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + content);\n  };\n\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;","map":{"version":3,"sources":["D:/Backend new/project_video_chat-master/client/node_modules/engine.io-parser/lib/encodePacket.browser.js"],"names":["PACKET_TYPES","require","withNativeBlob","Blob","Object","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","type","data","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,WAAD,CAAhC;;AAEA,MAAMC,cAAc,GAClB,OAAOC,IAAP,KAAgB,UAAhB,IACC,OAAOA,IAAP,KAAgB,WAAhB,IACCC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,IAA/B,MAAyC,0BAH7C;AAIA,MAAMK,qBAAqB,GAAG,OAAOC,WAAP,KAAuB,UAArD,C,CAEA;;AACA,MAAMC,MAAM,GAAGC,GAAG,IAAI;AACpB,SAAO,OAAOF,WAAW,CAACC,MAAnB,KAA8B,UAA9B,GACHD,WAAW,CAACC,MAAZ,CAAmBC,GAAnB,CADG,GAEHA,GAAG,IAAIA,GAAG,CAACC,MAAJ,YAAsBH,WAFjC;AAGD,CAJD;;AAMA,MAAMI,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,EAAiBC,cAAjB,EAAiCC,QAAjC,KAA8C;AACjE,MAAIf,cAAc,IAAIa,IAAI,YAAYZ,IAAtC,EAA4C;AAC1C,QAAIa,cAAJ,EAAoB;AAClB,aAAOC,QAAQ,CAACF,IAAD,CAAf;AACD,KAFD,MAEO;AACL,aAAOG,kBAAkB,CAACH,IAAD,EAAOE,QAAP,CAAzB;AACD;AACF,GAND,MAMO,IACLT,qBAAqB,KACpBO,IAAI,YAAYN,WAAhB,IAA+BC,MAAM,CAACK,IAAD,CADjB,CADhB,EAGL;AACA,QAAIC,cAAJ,EAAoB;AAClB,aAAOC,QAAQ,CAACF,IAAI,YAAYN,WAAhB,GAA8BM,IAA9B,GAAqCA,IAAI,CAACH,MAA3C,CAAf;AACD,KAFD,MAEO;AACL,aAAOM,kBAAkB,CAAC,IAAIf,IAAJ,CAAS,CAACY,IAAD,CAAT,CAAD,EAAmBE,QAAnB,CAAzB;AACD;AACF,GAhBgE,CAiBjE;;;AACA,SAAOA,QAAQ,CAACjB,YAAY,CAACc,IAAD,CAAZ,IAAsBC,IAAI,IAAI,EAA9B,CAAD,CAAf;AACD,CAnBD;;AAqBA,MAAMG,kBAAkB,GAAG,CAACH,IAAD,EAAOE,QAAP,KAAoB;AAC7C,QAAME,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;AACAD,EAAAA,UAAU,CAACE,MAAX,GAAoB,YAAW;AAC7B,UAAMC,OAAO,GAAGH,UAAU,CAACI,MAAX,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAhB;AACAP,IAAAA,QAAQ,CAAC,MAAMK,OAAP,CAAR;AACD,GAHD;;AAIA,SAAOH,UAAU,CAACM,aAAX,CAAyBV,IAAzB,CAAP;AACD,CAPD;;AASAW,MAAM,CAACC,OAAP,GAAiBd,YAAjB","sourcesContent":["const { PACKET_TYPES } = require(\"./commons\");\n\nconst withNativeBlob =\n  typeof Blob === \"function\" ||\n  (typeof Blob !== \"undefined\" &&\n    Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\"\n    ? ArrayBuffer.isView(obj)\n    : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (\n    withNativeArrayBuffer &&\n    (data instanceof ArrayBuffer || isView(data))\n  ) {\n    if (supportsBinary) {\n      return callback(data instanceof ArrayBuffer ? data : data.buffer);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function() {\n    const content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + content);\n  };\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;\n"]},"metadata":{},"sourceType":"script"}